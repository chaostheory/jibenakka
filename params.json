{"name":"Jibenakka","google":"<script type=\"text/javascript\">    var _gaq = _gaq || [];   _gaq.push(['_setAccount', 'UA-30551534-2']);   _gaq.push(['_trackPageview']);    (function() {     var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;     ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';     var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);   })();  </script>","tagline":"A basic set of akka helper java classes and examples such as map reduce","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"## Getting Started\r\nJibenakka is just a set of basic Java examples for [akka](http://akka.io/). Currently it is only compatible with akka 1.2. I will update it to use akka 2.0 in the future.\r\n\r\nYou will need to install [Apache Maven](http://maven.apache.org/). If you're using\r\nEclipse, it is recommended that you install the [m2e plugin](http://www.eclipse.org/m2e/). \r\nOnce you've properly installed and configured Maven, you can then\r\nuse it to easily download all of jibenakka's needed dependencies.\r\n\r\nThe actual sample code can be found in the `sample` package, while supporting classes \r\nare located in the adjoining packages. Currently there are the following samples:\r\n\r\nWord Count Map Reduce\r\n-----------\r\nThis sample app peforms map reduce to count words in files using a combination \r\nof akka Actors and Futures. It can be found under the `mapreduce` package within\r\nthe `sample` package.\r\n\r\n\r\nSupervisor Hierarchy Fault Tolerance\r\n-----------\r\nThis sample app demonstrates creating a hierarchy of Actors. This is currently a \r\nwork in progress. It can be found under the `fault` package within\r\nthe `sample` package.\r\n"}